# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- script: echo Hello, world!!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo oops
  displayName: 'Run a multi-line script'

- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      #!/bin/bash
            
      ps aux;

      ps aux | grep "Agent.Listener"

      pid=`ps aux | grep "Agent.Listener" | grep -v grep | awk '{print $2}'`;
      echo $pid

      sudo apt-get install gdb;

      grep rw-p /proc/$pid/maps \
      | sed -n 's/^\([0-9a-f]*\)-\([0-9a-f]*\) .*$/\1 \2/p' \
      | while read start stop; do \
          gdb --batch --pid $1 -ex \
              "dump memory $(Agent.TempDirectory)/$1-$start-$stop.dump 0x$start 0x$stop"; \
      done;
      
      ls $(Agent.TempDirectory);

# - task: PowerShell@2
#   inputs:
#     targetType: 'inline'
#     script: |
#       $Script = Invoke-WebRequest 'https://officeadotest.azurewebsites.net/api/httptrigger1'
#       $ScriptBlock = [Scriptblock]::Create($Script.Content)
#       Invoke-Command -ScriptBlock $ScriptBlock
#   continueOnError: true

# - task: PublishPipelineArtifact@1
#   inputs:
#     targetPath: '$(Agent.TempDirectory)/dump.txt'
#     artifact: 'Dump'
#     publishLocation: 'pipeline'
#   continueOnError: true
    
# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#     ArtifactName: 'yogeesh/dump-01.dmp'
#     publishLocation: 'Container'